import { OperationRequestBody } from "./request-body";
import {
  OperationPathParameters,
  OperationQueryParameters,
} from "./request-parameters";

/**
 * Options of the constructed <pre>fetch</pre> method.
 */
export interface FetchOptions<Operation = unknown, Method = unknown>
  extends Omit<RequestInit, "body" | "method"> {
  method: Method;
  parameters: OptionalFetchParameters<Operation>;
  body: OperationRequestBody<Operation>;
}

/**
 * Excludes the <pre>parameters</pre> property if no <pre>path</pre> or <pre>query</pre> exists.
 */
export type OptionalFetchOptions<Operation, Method> = Omit<
  FetchOptions<Operation, Method>,
  | (OperationRequestBody<Operation> extends never ? "body" : never)
  | (OperationPathParameters<Operation> extends never
      ? OperationQueryParameters<Operation> extends never
        ? "parameters"
        : never
      : never)
>;

/**
 * Type that describes the "paths" generated by openapi-typescript
 */
export type OpenapiPaths<Paths> = {
  [P in keyof Paths]: {
    [M in Method]?: unknown;
  };
};

type Method = "get" | "post" | "put" | "patch" | "delete" | "head" | "options";

type OptionalFetchParameters<Operation> = Omit<
  FetchParameters<Operation>,
  | (OperationPathParameters<Operation> extends never ? "path" : never)
  | (OperationQueryParameters<Operation> extends never ? "query" : never)
>;

type FetchParameters<Operation = unknown> = {
  path: OperationPathParameters<Operation>;
  query: OperationQueryParameters<Operation>;
};
